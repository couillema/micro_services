#
# Wrapper parameters for vision microservices
# vision.conf
#

#************
# parameters
#************
set.SRV_NAME=%CONF_NAME%
set.SRV_VERSION=0.0.1
set.JMXPORT=13199
set.JMXHOSTNAME=%JMXADDR%


#****************
# Java parameters
#****************

# Native library, Please start with .2 !!
wrapper.java.library.path.2=

# Java librairies, start with .2!!
wrapper.java.classpath.2=./javalib/VisionMicroservices.jar
wrapper.java.classpath.3=


# Set the main class to be the WrapperSimpleApp
wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp

# Port which the native wrapper code will attempt to connect to
# remark: all services wrapper MUST BE 10000
wrapper.port=10000

# Java Additional Parameters, Please start with .2 !!
wrapper.java.additional.1=-DappPort=60011
wrapper.java.additional.2=-DadminPort=60012
wrapper.java.additional.3=-Dcom.sun.management.jmxremote
wrapper.java.additional.4=-Dcom.sun.management.jmxremote.authenticate=false
wrapper.java.additional.5=-Dcom.sun.management.jmxremote.ssl=false
wrapper.java.additional.6=-Djava.rmi.server.hostname=%JMXHOSTNAME%
wrapper.java.additional.7=-Dcom.sun.management.jmxremote.port=%JMXPORT%
wrapper.java.additional.8=-Dcom.sun.management.jmxremote.rmi.port=%JMXPORT%
wrapper.java.additional.9=

# Set the first application parameter to the name of the class whose main method
# is to be launched. Additional parameters come after this one.
# Please start with .2 !!
wrapper.app.parameter.1=com.chronopost.vision.microservices.VisionMicroserviceApplication
wrapper.app.parameter.2=server
wrapper.app.parameter.3=./conf/config.yml

# Initial Java Heap Size (in MB)
wrapper.java.initmemory=256

# Maximum Java Heap Size (in MB)
wrapper.java.maxmemory=2048


#***************************
# Wrapper Logging parameters
#***************************
# Format of output for the console.  (See docs for formats)
wrapper.console.format=

# Log Level for console output.  (See docs for log levels)
wrapper.console.loglevel=NONE

# Name of log file (cf. config/c11diff.properties)
wrapper.logfile=./logs/vision-consultation-service.log

# Format of output for the log file.  (See docs for formats)
wrapper.logfile.format=TPLM

# service name, DisplayName & description
wrapper.ntservice.displayname=msv_vision_consultation_green
wrapper.ntservice.description=msv_vision_consultation_green


# Log Level for log file output.  (See docs for log levels)
wrapper.logfile.loglevel=INFO
# Maximum size that the log file will be allowed to grow to before
#  the log is rolled. Size is specified in bytes.  The default value
#  of 0, disables log rolling.  May abbreviate with the 'k' (kb) or
#  'm' (mb) suffix.  For example: 10m = 10 megabytes.
wrapper.logfile.maxsize=5m

# Maximum number of rolled log files which will be allowed before old
#  files are deleted.  The default value of 0 implies no limit.
wrapper.logfile.maxfiles=5

# Log Level for sys/event log output.  (See docs for log levels)
wrapper.syslog.loglevel=ERROR


#******************************
# Wrapper NT Service parameters
#******************************
# WARNING - Do not modify any of these parameters when an application
#  using this configuration file has been installed as a service.
#  Please uninstall the service before modifying this section.  The
#  service can then be reinstalled.

# service DisplayName & description
wrapper.ntservice.displayname=%SRV_NAME% (%SRV_VERSION%)
wrapper.ntservice.description=%SRV_NAME% (%SRV_VERSION%)

# Service dependencies.  Add dependencies as needed starting from 1
wrapper.ntservice.dependency.1=

# Mode in which the service is installed.  AUTO_START or DEMAND_START
wrapper.ntservice.starttype=AUTO_START

# Priority at which the service is run.  NORMAL, LOW, HIGH, or
#  REALTIME
wrapper.ntservice.process_priority=NORMAL

# Service Account (optionnal, defaut is LocalSystem)
# accout form is DOMAIN\SESSION with current domain .
# wrapper.ntservice.account=
# wrapper.ntservice.password=

# interactive mode (true only if no wrapper.ntservice.account given!)
# wrapper.ntservice.interactive=false


#*******************************
# Wrapper jvm control parameters
#*******************************
# Controls the number of seconds to pause between a JVM exiting for any reason, and
# a new JVM being launched.
# Defaults to 5 seconds.
wrapper.restart.delay=20

# Number of seconds to allow between the time that the Wrapper launches the JVM process and
# the time that the JVM side of the Wrapper responds that the application has started.
# 0 means never time out.
# Defaults to 30 seconds. 
wrapper.startup.timeout=60

# Number of seconds to allow between the wrapper pinging the JVM and the response.
# 0 means never time out. Defaults to 30 seconds.
wrapper.ping.timeout=30

# Number of seconds between Wrapper ping requests to the JVM. Must be in the range 1 to 3600 seconds.
# Defaults to 5 seconds. 
wrapper.ping.interval=10

# Enabling this property will tell the Wrapper to attempt to request a Thread Dump in the event
# that the JVM does not exit when requested. This information can be useful in tracking down the reason
# why the JVM is not exiting. This will have no effect if the JVM is hung for some reason as it's process
# will not respond to the thread dump request.
# Defaults to FALSE. 
wrapper.request_thread_dump_on_failed_jvm_exit=TRUE

# Number of seconds to allow between the time that the Wrapper asks the JVM to shutdown and
# the time that the JVM side of the Wrapper responds that it is stopping.
# 0 means never time out.
# Defaults to 30 seconds. 
wrapper.shutdown.timeout=60

# Number of seconds to allow between the time that the JVM reports that it is stopped and
# the time that the JVM process actually terminates.
# 0 means never time out.
# Defaults to 5 seconds.
wrapper.jvm_exit.timeout=20

# Number of seconds without CPU before the JVM will issue a warning and extend timeouts.
# In order for this property to have any effect, it must have a value less than the other timeouts
# (wrapper.startup.timeout, wrapper.ping.timeout, and wrapper.shutdown.timeout).
# 0 means never extend time outs.
# Defaults to 10 seconds.
wrapper.cpu.timeout=20
 
# Maximum number of times that the Wrapper will attempt to restart the JVM if each attempted
# invocation exits abnormally shortly after having being launched. Must be at least 1.
# Defaults to 5 invocations.
wrapper.max_failed_invocations=2
 
# Specifies the amount of time that an application must remain running before it will be considered
# to have been a successful invocation. This property's use is described above in the description
# of wrapper.max_failed_invocations. Defaults to 300 seconds.
# wrapper.successful_invocation_time=

#
# EOF solr.conf
#

